// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: event_team_challenges.sql

package postgres

import (
	"context"

	"github.com/gofrs/uuid"
)

const createEventTeamChallenge = `-- name: CreateEventTeamChallenge :exec
insert into event_team_challenges
    (id, event_id, team_id, challenge_id, flag)
values ($1, $2, $3, $4, $5)
`

type CreateEventTeamChallengeParams struct {
	ID          uuid.UUID `json:"id"`
	EventID     uuid.UUID `json:"event_id"`
	TeamID      uuid.UUID `json:"team_id"`
	ChallengeID uuid.UUID `json:"challenge_id"`
	Flag        string    `json:"flag"`
}

func (q *Queries) CreateEventTeamChallenge(ctx context.Context, arg CreateEventTeamChallengeParams) error {
	_, err := q.exec(ctx, q.createEventTeamChallengeStmt, createEventTeamChallenge,
		arg.ID,
		arg.EventID,
		arg.TeamID,
		arg.ChallengeID,
		arg.Flag,
	)
	return err
}

const getChallengeFlag = `-- name: GetChallengeFlag :one
select flag
from event_team_challenges
where challenge_id = $1
  and team_id = $2
`

type GetChallengeFlagParams struct {
	ChallengeID uuid.UUID `json:"challenge_id"`
	TeamID      uuid.UUID `json:"team_id"`
}

func (q *Queries) GetChallengeFlag(ctx context.Context, arg GetChallengeFlagParams) (string, error) {
	row := q.queryRow(ctx, q.getChallengeFlagStmt, getChallengeFlag, arg.ChallengeID, arg.TeamID)
	var flag string
	err := row.Scan(&flag)
	return flag, err
}
