// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: files.sql

package postgres

import (
	"context"

	"github.com/gofrs/uuid"
)

const createFile = `-- name: CreateFile :exec
insert into files (id, name)
values ($1, $2)
`

type CreateFileParams struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) error {
	_, err := q.exec(ctx, q.createFileStmt, createFile, arg.ID, arg.Name)
	return err
}

const deleteFile = `-- name: DeleteFile :exec
delete
from files
where id = $1
`

func (q *Queries) DeleteFile(ctx context.Context, id uuid.UUID) error {
	_, err := q.exec(ctx, q.deleteFileStmt, deleteFile, id)
	return err
}

const getFileByID = `-- name: GetFileByID :one
select id, name, created_at
from files
where id = $1
`

func (q *Queries) GetFileByID(ctx context.Context, id uuid.UUID) (File, error) {
	row := q.queryRow(ctx, q.getFileByIDStmt, getFileByID, id)
	var i File
	err := row.Scan(&i.ID, &i.Name, &i.CreatedAt)
	return i, err
}
