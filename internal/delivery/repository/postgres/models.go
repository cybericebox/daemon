// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package postgres

import (
	"database/sql"
	"encoding/json"
	"time"

	"github.com/gofrs/uuid"
)

type Event struct {
	ID                     uuid.UUID     `json:"id"`
	Type                   int32         `json:"type"`
	Availability           int32         `json:"availability"`
	Participation          int32         `json:"participation"`
	Tag                    string        `json:"tag"`
	Name                   string        `json:"name"`
	Description            string        `json:"description"`
	Rules                  string        `json:"rules"`
	Picture                string        `json:"picture"`
	DynamicScoring         bool          `json:"dynamic_scoring"`
	DynamicMax             int32         `json:"dynamic_max"`
	DynamicMin             int32         `json:"dynamic_min"`
	DynamicSolveThreshold  int32         `json:"dynamic_solve_threshold"`
	Registration           int32         `json:"registration"`
	ScoreboardAvailability int32         `json:"scoreboard_availability"`
	ParticipantsVisibility int32         `json:"participants_visibility"`
	PublishTime            time.Time     `json:"publish_time"`
	StartTime              time.Time     `json:"start_time"`
	FinishTime             time.Time     `json:"finish_time"`
	WithdrawTime           time.Time     `json:"withdraw_time"`
	UpdatedAt              sql.NullTime  `json:"updated_at"`
	UpdatedBy              uuid.NullUUID `json:"updated_by"`
	CreatedAt              time.Time     `json:"created_at"`
}

type EventChallenge struct {
	ID             uuid.UUID     `json:"id"`
	EventID        uuid.UUID     `json:"event_id"`
	CategoryID     uuid.UUID     `json:"category_id"`
	Name           string        `json:"name"`
	Description    string        `json:"description"`
	Points         int32         `json:"points"`
	OrderIndex     int32         `json:"order_index"`
	ExerciseID     uuid.UUID     `json:"exercise_id"`
	ExerciseTaskID uuid.UUID     `json:"exercise_task_id"`
	UpdatedAt      sql.NullTime  `json:"updated_at"`
	UpdatedBy      uuid.NullUUID `json:"updated_by"`
	CreatedAt      time.Time     `json:"created_at"`
}

type EventChallengeCategory struct {
	ID         uuid.UUID     `json:"id"`
	EventID    uuid.UUID     `json:"event_id"`
	Name       string        `json:"name"`
	OrderIndex int32         `json:"order_index"`
	UpdatedAt  sql.NullTime  `json:"updated_at"`
	UpdatedBy  uuid.NullUUID `json:"updated_by"`
	CreatedAt  time.Time     `json:"created_at"`
}

type Exercise struct {
	ID          uuid.UUID       `json:"id"`
	CategoryID  uuid.UUID       `json:"category_id"`
	Name        string          `json:"name"`
	Description string          `json:"description"`
	Data        json.RawMessage `json:"data"`
	UpdatedAt   sql.NullTime    `json:"updated_at"`
	UpdatedBy   uuid.NullUUID   `json:"updated_by"`
	CreatedAt   time.Time       `json:"created_at"`
}

type ExerciseCategory struct {
	ID          uuid.UUID     `json:"id"`
	Name        string        `json:"name"`
	Description string        `json:"description"`
	UpdatedAt   sql.NullTime  `json:"updated_at"`
	UpdatedBy   uuid.NullUUID `json:"updated_by"`
	CreatedAt   time.Time     `json:"created_at"`
}

type File struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

type TemporalCode struct {
	ID        uuid.UUID `json:"id"`
	ExpiredAt time.Time `json:"expired_at"`
	CodeType  int32     `json:"code_type"`
	V0        string    `json:"v0"`
	V1        string    `json:"v1"`
	V2        string    `json:"v2"`
	CreatedAt time.Time `json:"created_at"`
}

type User struct {
	ID             uuid.UUID      `json:"id"`
	GoogleID       sql.NullString `json:"google_id"`
	Email          string         `json:"email"`
	Name           string         `json:"name"`
	HashedPassword string         `json:"hashed_password"`
	Picture        string         `json:"picture"`
	Role           string         `json:"role"`
	LastSeen       time.Time      `json:"last_seen"`
	UpdatedAt      sql.NullTime   `json:"updated_at"`
	UpdatedBy      uuid.NullUUID  `json:"updated_by"`
	CreatedAt      time.Time      `json:"created_at"`
}
